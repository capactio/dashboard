name: PR build

on:
  pull_request_target:
    types: [ opened, synchronize, reopened ]
    paths-ignore:
      - "LICENSE"
      - "CODEOWNERS"
      - "**.md"
    branches:
      - "main"

env:
  DOCKER_TAG: PR-${{ github.event.pull_request.number }}
  DOCKER_REPOSITORY: "ghcr.io/capactio/pr"
  DOCKER_IMAGES_DIR: "/tmp/docker-images"
  DOCKER_IMAGES_ARTIFACT_NAME_PREFIX: "dashboard-images"

jobs:
  cancel-previous-workflows:
    name: Cancel previous workflows
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    # https://github.com/styfle/cancel-workflow-action#advanced-token-permissions
    permissions:
      actions: write
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.0
        with:
          access_token: ${{ github.token }}

  build:
    name: Build application
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    permissions:
      contents: read
   
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '17.x'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm install
          npm run bootstrap

      - name: Lint code
        run: npm run lint

      - name: Build applications
        # Unfortunately, the only way to not treat warnings as errors
        # on CI is setting `CI` env to `false` for create-react-app.
        # See the issue https://github.com/facebook/create-react-app/issues/3657
        run: CI=false npm run build

      - name: Build Docker images
        run: npm run docker:build

      - name: Save Docker images
        run: npm run docker:save 

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.DOCKER_IMAGES_ARTIFACT_NAME_PREFIX }}-${{github.sha}}
          path: ${{ env.DOCKER_IMAGES_DIR }}
          retention-days: 1

  push:
    name: Push application
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event.pull_request.draft == false
    permissions:
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.DOCKER_IMAGES_ARTIFACT_NAME_PREFIX }}-${{github.sha}}
          path: ${{ env.DOCKER_IMAGES_DIR }}

      - name: Load Docker images
        run: npm run docker:load 

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push Docker images
        run: npm run docker:push
